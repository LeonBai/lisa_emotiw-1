!obj:pylearn2.train.Train {
    dataset: &train !obj:emotiw.bouthilx.datasets.AFEWStatsDataset {
        which_set: 'train',
        base_path: '.',
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [ !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 7,
                     irange: 0.
                 }
                ],
       nvis: 5,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 20,
        learning_rate: 0.1,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:emotiw.bouthilx.datasets.AFEWStatsDataset {
                    which_set: 'valid',
                    base_path: '.',
                },
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts { costs: [
            !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
#            }, !obj:pylearn2.models.mlp.WeightDecay {
#                coeffs: [ 0.001]
            }
            ]
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 50
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: 'best_min_model.pkl'
        },
    ],
}
