!obj:pylearn2.train.Train {
    dataset: &train !obj:emotiw.caglar.features_ds.FeaturesDataset {
        one_hot: 1,
        which_set: "train",
        base_path: "./",
        features_path: "train_data_40.npy",
        labels_path: "audio_mlp_train_labels.npy",
        shuffle: 1,
        standardize: 1
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h0',
                     num_units: 250,
                     num_pieces: 4,
                     irange: .005,
                     max_col_norm: 1.2365
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h1',
                     num_units: 250,
                     num_pieces: 4,
                     irange: .005,
                     max_col_norm: 1.2365
                 },
                !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 7,
                     irange: .005,
                     max_col_norm: 1.9365
                 }
                ],
        nvis: 40,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 1,
        learning_rate: .02,
        init_momentum: .5,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:emotiw.caglar.features_ds.FeaturesDataset {
                            one_hot: 1,
                            which_set: "valid",
                            base_path: "./",
                            features_path: "valid_data_40.npy",
                            labels_path: "audio_mlp_valid_labels.npy",
                            standardize: 1
                          }
            },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'h0' : .5, 'h1': .5 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 320
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.000004,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 320,
            final_momentum: .8
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
